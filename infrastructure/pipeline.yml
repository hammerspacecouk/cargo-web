Parameters:
  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String

  GitHubUser:
    Type: String

  StaticBucket:
    Type: String

  AlphaBucket:
    Type: String

  BetaBucket:
    Type: String

  ProdBucket:
    Type: String


Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource:
                  - !Sub arn:aws:s3:::${StaticBucket}
                  - !Sub arn:aws:s3:::${StaticBucket}/*
                Effect: Allow
                Action:
                  - s3:DeleteObject
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:PutObjectAcl

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Resource:
                  - !Sub arn:aws:s3:::${AlphaBucket}/*
                  - !Sub arn:aws:s3:::${BetaBucket}/*
                  - !Sub arn:aws:s3:::${ProdBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 21
            Status: Enabled

  CodeBuildProjectBuildApp:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Installing dependencies...
                - npm ci
            build:
              commands:
                - NODE_ENV=production STATIC_HOST=https://${STATIC_BUCKET} npm run client
            post_build:
              commands:
                - echo Static files to S3
                - aws s3 sync ./build/static s3://${STATIC_BUCKET} --cache-control="max-age=31536000, immutable" --acl public-read --exclude "*.js" --exclude "html/*"
                - aws s3 sync ./build/static s3://${STATIC_BUCKET} --cache-control="max-age=31536000, immutable" --acl public-read --exclude "*" --include "*.js" --content-type "application/javascript; charset=utf-8"
          artifacts:
            files: "build/static/html/*"
            discard-paths: yes
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: aws/codebuild/nodejs:10.14.1
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: STATIC_BUCKET
            Value: !Ref StaticBucket
      Name: "planet-cargo-web-build-app"
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildApp
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: AppOutput
              RunOrder: 1
        - Name: DeployAlpha
          Actions:
            - Name: DeployAlpha
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref AlphaBucket
                Extract: true
              InputArtifacts:
                - Name: AppOutput
              RunOrder: 1
            - Name: DeployBeta
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref BetaBucket
                Extract: true
              InputArtifacts:
                - Name: AppOutput
              RunOrder: 1
        - Name: ApproveProd
          Actions:
            - Name: ApproveProd
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              RunOrder: 1
        - Name: DeployProd
          Actions:
            - Name: DeployProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref ProdBucket
                Extract: true
              InputArtifacts:
                - Name: AppOutput
              RunOrder: 1



Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
